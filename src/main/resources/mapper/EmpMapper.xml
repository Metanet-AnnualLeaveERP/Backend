<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meta.ale.mapper.EmpMapper">

    <resultMap id="userMap" type="UserDto">
        <id property="userId" column="user_id"/>
        <result property="empNum" column="emp_num"/>
        <result property="role" column="role"/>
    </resultMap>

    <resultMap id="deptMap" type="deptDto">
        <id property="deptId" column="dept_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="vcTo" column="vc_to"/>
    </resultMap>

    <resultMap id="empMap" type="EmpDto">
        <id property="empId" column="emp_id"/>
        <result property="name" column="name"/>
        <result property="hireDate" column="hire_date"/>
        <result property="position" column="position"/>
        <result property="pEmail" column="p_email"/>
        <result property="cEmail" column="c_email"/>
        <result property="tel" column="tel"/>
        <result property="mgrId" column="mgr_id"/>
        <result property="leaveDate" column="leave_date"/>
        <association property="userDto" resultMap="userMap"/>
        <association property="deptDto" resultMap="deptMap"/>
    </resultMap>

    <insert id="insertEmp">
        <selectKey resultType="long" order="BEFORE" keyProperty="empId">
            select emp_sq.nextval from dual
        </selectKey>
        insert into emp
        (emp_id, name, hire_date, position, p_email, c_email, tel, user_id,
        <if test="mgrId != null">
            mgr_id,
        </if>
        dept_id)
        values
        (#{empId}, #{name}, #{hireDate}, #{position}, #{pEmail}, #{cEmail}, #{tel}, #{userDto.userId},
        <if test="mgrId != null">
            #{mgrId},
        </if>
        #{deptDto.deptId}
        )
    </insert>

    <update id="updateEmp">
        update emp
        set
        dept_id = #{deptDto.deptId},
        position = #{position},
        mgr_id = #{mgrId, jdbcType=NULL}
        where
        emp_id = #{empId}
    </update>

    <select id="selectDeptMgr" resultType="Long">
        select emp_id
        from emp
        where position = '팀장' and dept_id = #{deptId}
    </select>

    <select id="selectListByDeptId">
        select *
        from emp
        where dept_id = #{deptId}
    </select>

    <update id="updateEmpList" parameterType="hashMap">
        update emp
        set mgr_id = #{mgrId, jdbcType=NULL}
        where dept_id = #{deptId}
        and position = '사원'
    </update>

    <select id="selectDeptEmpCnt" resultType="Long">
        select count(*)
        from emp
        where dept_id = #{deptId}
        and position = '사원'
    </select>

    <select id="selectPositionByEmpId" resultType="String">
        select position
        from emp
        where emp_id = #{empId}
    </select>

    <select id="selectEmpByEmpId" resultMap="empMap">
        select e.*, u.user_id, u.role, u.emp_num, d.dept_name
        from emp e
        join users u
        on e.user_id = u.user_id
        join dept d
        on e.dept_id = d.dept_id
        where emp_id = #{empId}
    </select>

    <select id="selectEmpListCnt" resultType="Integer">
        select count(*)
        from emp
        where
        emp_id != 0
    </select>

    <select id="selectEmpList" resultMap="empMap">
        select
        *
        from (
        select
        rownum rn, e.*, u.role, u.emp_num, d.dept_name
        from
        emp e
        join users u
        on e.user_id = u.user_id
        join dept d
        on e.dept_id = d.dept_id
        where
        <choose>
            <when test="keyWord == 'resign'">
                leave_date is not null and
            </when>
            <when test="keyWord == 'active'">
                leave_date is null and
            </when>
        </choose>
        <![CDATA[ ROWNUM <= #{pageNum} * #{amount} ]]>
        and
        emp_id != 0
        )
        <![CDATA[ WHERE RN > (#{pageNum}-1) * #{amount} ]]>

    </select>

    <update id="updateEmpInfo">
        update emp
        set p_email = #{pEmail}
        where
        emp_id = #{empId}
    </update>

    <select id="selectHireOrder" resultType="Integer">
        SELECT COUNT(*)
        FROM emp
        WHERE EXTRACT(YEAR FROM hire_date) = EXTRACT(YEAR FROM SYSDATE)
    </select>

    <update id="updateLeaveDate">
        update emp
        set leave_date = sysdate
        where
        emp_id = #{empId}
    </update>

    <select id="selectDuplicatedEmail" resultType="Integer">
        select count(*)
        from emp
        where p_email = #{email}
    </select>


    <select id="findEmpOverTwoYrLeaveDate" resultType="EmpDto">
        SELECT *
        FROM EMP
        WHERE LEAVE_DATE IS NOT NULL
        AND (TO_CHAR(LEAVE_DATE) = TO_CHAR(SYSDATE - 730))
    </select>
</mapper>
