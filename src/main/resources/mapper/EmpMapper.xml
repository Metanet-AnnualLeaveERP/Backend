<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meta.ale.mapper.EmpMapper">

    <resultMap id="userMap" type="UserDto">
        <id property="userId" column="user_id"/>
        <result property="empNum"  column="emp_num"/>
        <result property="role"    column="role"/>
        <result property="enabled" column="enabled"/>
    </resultMap>

    <resultMap id="deptMap" type="deptDto">
        <id property="deptId" column="dept_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="vcTo" column="vc_to"/>
    </resultMap>

    <resultMap id="empMap" type="EmpDto">
        <id property="empId" column="emp_id"/>
        <result property="name" column="name"/>
        <result property="hireDate" column="hire_date"/>
        <result property="position" column="position"/>
        <result property="pEmail" column="p_email"/>
        <result property="cEmail" column="c_email"/>
        <result property="tel" column="tel"/>
        <result property="mgrId" column="mgr_id"/>
        <result property="leaveDate" column="leave_date"/>
        <association property="userDto" resultMap="userMap"/>
        <association property="deptDto" resultMap="deptMap"/>
    </resultMap>


    <select id="findEmpOverOneYrList" resultType="EmpDto">
    <![CDATA[
        SELECT *
        FROM EMP
        WHERE HIRE_DATE < SYSDATE - INTERVAL '1' YEAR
          AND NOT (TO_CHAR(HIRE_DATE) = TO_CHAR(SYSDATE - 365))
          AND TO_CHAR(HIRE_DATE, 'MM/DD') = TO_CHAR(SYSDATE, 'MM/DD')
          AND LEAVE_DATE IS NULL
        ]]>
    </select>

    <select id="findEmpOneYrList" resultType="EmpDto">
        <![CDATA[
        SELECT *
        FROM EMP
        WHERE TO_CHAR(HIRE_DATE) = TO_CHAR(SYSDATE - 365)
          AND LEAVE_DATE IS NULL
        ]]>
    </select>

    <select id="findEmpUnderOneYrList" resultType="EmpDto">
        SELECT *
        FROM EMP
        WHERE HIRE_DATE > SYSDATE - INTERVAL '1' YEAR
          AND TO_CHAR(HIRE_DATE, 'DD') = TO_CHAR(SYSDATE, 'DD')
          AND TO_CHAR(HIRE_DATE) !=TO_CHAR(SYSDATE)
          AND LEAVE_DATE IS NULL
    </select>

    <select id="findEmpOverTwoYrLeaveDate" resultMap="empMap">
        SELECT u.*
        FROM EMP e , USERS u
        WHERE LEAVE_DATE IS NOT NULL
          AND e.user_id = u.user_id
          AND (TO_CHAR(LEAVE_DATE) = TO_CHAR(SYSDATE - 730))
    </select>

    <select id="findEmpByUserId" resultMap="empMap">
        SELECT e.emp_id, e.name, e.position, e.hire_date, e.p_email,
               e.c_email, e.tel, e.mgr_id, d.*
        FROM EMP e,
             DEPT d
        WHERE e.dept_id = d.dept_id
          AND e.user_id = #{userId}
    </select>

    <insert id="insertEmp">
        <selectKey resultType="long" order="BEFORE" keyProperty="empId">
            select emp_sq.nextval from dual
        </selectKey>
        insert into emp
        (emp_id, name, hire_date, position, p_email, c_email, tel, user_id,
        <if test="mgrId != null">
            mgr_id,
        </if>
        dept_id)
        values
        (#{empId}, #{name}, #{hireDate}, #{position}, #{pEmail}, #{cEmail}, #{tel}, #{userDto.userId},
        <if test="mgrId != null">
            #{mgrId},
        </if>
        #{deptDto.deptId}
        )
    </insert>

    <update id="updateEmp">
        update emp
        set
        dept_id = #{deptDto.deptId},
        position = #{position},
        mgr_id = #{mgrId, jdbcType=NULL}
        where
        emp_id = #{empId}
    </update>

    <select id="selectDeptMgr" resultType="Long">
        select emp_id
        from emp
        where position = '팀장' and dept_id = #{deptId}
    </select>

    <update id="updateEmpList" parameterType="hashMap">
        update emp
        set mgr_id = #{mgrId, jdbcType=NULL}
        where dept_id = #{deptId}
        and position = '팀원'
    </update>

    <select id="selectDeptEmpCnt" resultType="Long">
        select count(*)
        from emp
        where dept_id = #{deptId}
        and position = '팀원'
    </select>

    <select id="selectPositionByEmpId" resultType="String">
        select position
        from emp
        where emp_id = #{empId}
    </select>

    <select id="selectEmpByEmpId" resultMap="empMap">
        select e.*, u.user_id, u.role, u.emp_num, u.enabled, d.dept_name
        from emp e
        join users u
        on e.user_id = u.user_id
        join dept d
        on e.dept_id = d.dept_id
        where emp_id = #{empId}
    </select>

    <select id="selectEmpListCnt" parameterType="hashmap" resultType="Integer">
        select count(*)
        from
        emp e
        join users u
        on e.user_id = u.user_id
        join dept d
        on e.dept_id = d.dept_id
        where
        <if test="keyWordDept != '전체'">
            d.dept_name = #{keyWordDept} and
        </if>
        <if test="keyWordName != '이름'">
            e.name = #{keyWordName} and
        </if>
        <if test="keyWordActive == '퇴사자'">
            e.leave_date is not null and
        </if>
        <if test="keyWordActive == '재직자'">
            e.leave_date is null and
        </if>
        emp_id != 0
    </select>

    <select id="selectEmpList" resultMap="empMap">
        select
        *
        from (
        select
        rownum rn, e.*, u.role, u.emp_num, d.dept_name
        from
        emp e
        join users u
        on e.user_id = u.user_id
        join dept d
        on e.dept_id = d.dept_id
        where
        <if test="keyWordDept != '전체'">
            d.dept_name = #{keyWordDept} and
        </if>
        <if test="keyWordName != '이름'">
            e.name = #{keyWordName} and
        </if>
        <if test="keyWordActive == '퇴사자'">
            e.leave_date is not null and
        </if>
        <if test="keyWordActive == '재직자'">
            e.leave_date is null and
        </if>
        <![CDATA[ ROWNUM <= #{pageNum} * #{amount} ]]>
        and
        emp_id != 0
        )
        <![CDATA[ WHERE RN > (#{pageNum}-1) * #{amount} ]]>

    </select>

    <update id="updateEmpInfo">
        update emp
        set p_email = #{pEmail}
        where
        emp_id = #{empId}
    </update>

    <select id="selectHireOrder" resultType="Integer">
        SELECT COUNT(*)
        FROM emp
        WHERE EXTRACT(YEAR FROM hire_date) = EXTRACT(YEAR FROM SYSDATE)
    </select>

    <update id="updateLeaveDate">
        update emp
        set leave_date = sysdate
        where
        emp_id = #{empId}
    </update>

    <select id="selectDuplicatedEmail" resultMap="empMap" parameterType="HashMap">
        select e.emp_id, e.name, e.position, e.p_email, e.c_email, e.tel , u.*
        from emp e, users u
        where e.user_id = u.user_id
          and e.p_email = #{email}
          and u.emp_num = #{empNum}
    </select>

    <!--상사 정보-->
    <select id="getEmpByMgrId" resultType="EmpDto">
        SELECT e.emp_id, e.name, e.position, e.p_email, e.c_email, e.tel
        FROM emp e
        WHERE emp_id = #{mgrId}
        AND leave_date IS NULL
    </select>

    <select id="selectListByDeptId" resultMap="empMap" parameterType="Long" >
        select e.emp_id, e.name, e.position, e.p_email, e.c_email, e.tel
        from emp e
        where dept_id = #{deptId}
    </select>

    <select id="selectEmpListByDeptIdAndExistsAnnualLeave" resultMap="empMap">
        SELECT  e.emp_id, e.name, e.position, e.p_email, e.c_email, e.tel FROM EMP e , GRANTED_VC GV
        WHERE  e.EMP_ID = GV.EMP_ID AND
               GV.TYPE_ID = 1 AND e.DEPT_ID = #{deptId}
    </select>
</mapper>
